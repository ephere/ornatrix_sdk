import MayaTest
import TestUtilities
import pymel.core as pm
import pymel.core.datatypes as dt
import maya.OpenMaya as om
import maya.OpenMayaUI as omUI
import datetime
import os
import unittest

class Test_BackwardCompatibility( MayaTest.OxTestCase ):

	@unittest.skip( "There is no clean way to provide root generation backward compatibility because random generator logic was changed. This test is for reference purposes mostly, it is always skipped." )
	def test_EditGuidesV1( self ):
		# Load previously saved scene from V1
		testScenePath = self.findTestFile( 'OxMayaV1EditGuidesScene.ma' )
		pm.openFile( testScenePath, force = True )

		guidesShape = pm.ls( type = TestUtilities.GuidesShapeName )[0]
		actualGuideVertices = TestUtilities.GetVerticesInObjectCoordinates( guidesShape )
		expectedGuideVertices = [[10.30949, -47.547367, -11.290712], [14.16499, -62.254398, -12.778139], [19.900181, -75.88496, -16.610838], [25.282859, -89.854447, -19.652811], [6.773623, -44.550659, 21.625889], [10.11961, -57.385161, 23.077834], [15.451214, -69.521306, 21.555992], [20.182862, -81.965412, 20.670654], [-11.426579, -42.702774, -22.682571], [-9.841237, -56.601384, -25.479408], [-5.981518, -69.470877, -30.273757], [-2.280112, -82.75897, -33.911421], [12.886156, -40.634781, 25.679714], [16.792922, -53.460096, 27.697486], [22.613953, -65.654046, 26.581006], [27.802275, -78.164186, 25.94796], [-1.520419, -39.104797, -30.724491], [0.863539, -54.947874, -35.315659], [5.505518, -69.654338, -41.635295], [10.341627, -84.663766, -47.029277], [-16.345524, -37.935333, 27.514679], [-17.131286, -53.282736, 32.764829], [-14.178339, -69.2213, 33.747988], [-9.91644, -84.880974, 33.169143], [31.051945, -34.682281, -17.22583], [37.760349, -48.617421, -19.677315], [45.585921, -61.426292, -24.137613], [52.69522, -74.923377, -27.671244], [-27.204239, -31.677391, -26.567919], [-27.198557, -44.585649, -29.920438], [-24.624828, -56.603485, -35.098355], [-22.095623, -69.128952, -38.916556], [-6.847953, -30.585541, 38.344528], [-6.277346, -45.01126, 45.644082], [-2.162205, -60.435005, 48.267818], [3.134096, -75.712845, 48.765034], [40.212608, -26.271713, -13.23834], [48.527013, -39.644286, -15.290201], [57.605316, -52.002387, -19.416528], [65.796046, -65.194656, -22.73939], [-30.643364, -28.917973, -26.261902], [-33.741289, -44.413385, -30.493635], [-33.094355, -59.5243, -36.726975], [-31.089416, -74.718225, -42.44875], [-20.235569, -27.393044, 35.885605], [-21.782348, -41.091552, 42.624965], [-19.282205, -56.083483, 44.734927], [-15.24624, -70.887657, 44.82544], [39.256615, -29.236685, 8.13046], [47.318817, -43.065345, 9.243191], [56.448854, -56.135017, 7.427911], [64.77437, -69.752601, 5.779571], [1.730093, -20.571806, -45.157661], [4.941575, -33.810453, -52.283187], [9.888924, -45.951596, -60.31221], [14.711049, -59.039337, -66.778031], [-43.410721, -21.292652, 10.87462], [-49.999406, -34.944861, 14.178486], [-51.549451, -50.370784, 13.589271], [-50.13054, -65.639556, 11.231181], [4.280776, -16.97962, 46.241581], [6.961623, -29.114531, 53.583392], [12.602055, -42.140359, 56.202483], [18.468113, -55.277474, 57.364778], [39.97591, -14.486815, -25.500978], [48.652619, -26.483079, -29.531581], [57.802376, -37.496677, -35.047389], [65.996091, -49.727769, -39.372432], [-27.712978, -8.412512, -40.465378], [-28.877403, -20.218833, -47.008217], [-27.269415, -31.320315, -54.605936], [-25.349894, -43.332179, -60.571164], [-45.50119, -8.233394, 17.923172], [-53.851875, -19.301577, 23.298716], [-56.772421, -33.833142, 24.498351], [-55.343339, -48.509156, 22.57293], [18.381348, -9.452364, 44.943325], [23.33499, -20.662722, 51.38471], [30.459015, -32.359721, 53.417023], [37.122822, -44.433766, 54.646778], [37.984432, -6.823544, -31.10561], [46.896467, -18.083631, -36.295903], [56.137801, -28.452446, -42.639292], [64.452077, -40.232384, -47.665093], [-37.616737, -7.55178, -31.393223], [-43.619109, -20.426637, -37.894779], [-45.169354, -33.828314, -45.772058], [-44.688853, -47.662086, -53.01471], [-38.668678, -3.23871, 30.815416], [-45.653819, -12.858739, 38.909997], [-47.373997, -26.697264, 42.430827], [-44.700256, -40.80968, 41.68902], [31.015873, -4.940427, 38.281139], [38.49384, -16.024049, 44.898179], [47.564594, -27.65018, 47.157888], [56.013897, -39.886325, 48.357068], [31.135406, 2.745283, -38.402958], [40.380378, -7.727158, -46.173645], [49.791878, -17.733646, -54.347926], [58.507473, -29.25726, -61.186784], [-36.050591, 7.729842, -32.939796], [-43.897773, -1.935544, -41.639908], [-46.659652, -13.661652, -50.889857], [-46.693391, -26.16495, -59.512903], [-30.685818, 3.594253, 38.75919], [-36.011755, -4.563498, 48.447444], [-36.225322, -17.410506, 53.314192], [-32.481446, -30.630173, 53.285197], [38.210392, 3.06529, 31.292755], [48.351021, -7.092795, 38.136351], [59.475175, -18.168803, 40.671852], [69.862081, -30.158179, 41.777045], [33.154243, 13.648396, -33.872131], [44.692071, 5.376301, -42.427477], [55.679871, -3.764345, -50.821462], [65.948363, -14.484768, -58.195273], [-39.667828, 11.046173, -27.90266], [-49.406103, 2.602403, -35.348524], [-53.476579, -9.016306, -43.715635], [-53.964225, -21.433434, -51.910076], [-24.321735, 10.531672, 41.629318], [-29.638319, 4.793473, 53.757094], [-30.117522, -7.25633, 61.6848], [-25.155493, -20.805595, 61.952727], [40.724304, 14.756181, 23.891415], [50.706852, 6.382702, 27.858987], [61.170773, -2.32266, 28.339707], [70.415912, -12.315806, 28.755036], [13.314455, 18.874737, -44.025826], [20.009338, 11.605211, -55.67392], [27.372806, 2.875215, -65.818454], [34.6158, -7.322557, -74.587155], [-43.9916, 22.597826, -3.793715], [-59.099225, 23.474553, -3.254743], [-70.449004, 13.573593, -4.821151], [-69.340966, -0.229164, -10.949457], [32.843632, 10.518333, 35.232349], [40.309176, 1.255123, 44.420246], [49.836533, -10.324337, 48.53606], [59.120585, -21.968973, 50.48543], [43.193359, 20.862871, -13.37103], [56.393657, 13.914398, -16.445784], [68.65309, 6.082868, -20.95762], [79.819281, -3.479593, -24.940007], [-18.486183, 24.648876, -38.641075], [-24.348458, 24.602799, -53.741743], [-25.308235, 15.373863, -67.019697], [-21.053163, 3.948331, -77.685067], [-30.722721, 24.842777, 29.670746], [-39.317774, 25.211364, 40.121524], [-43.639461, 15.575893, 48.589709], [-38.545229, 3.235123, 46.357071], [38.305317, 22.810904, 21.595476], [51.771638, 17.557645, 28.47028], [65.281336, 9.425769, 31.2202], [77.912618, -0.378891, 31.941852], [-32.721931, 34.337234, 14.589401], [-42.531267, 42.488, 20.357629], [-52.108022, 35.490547, 27.79079], [-48.422013, 22.480548, 24.173647], [12.133824, 36.375694, 31.684887], [17.491672, 39.483538, 44.551757], [26.600046, 33.477018, 53.764788], [36.90695, 23.654831, 54.866527], [-6.486163, 38.678055, -30.437645], [-5.609917, 44.731033, -42.404407], [-4.143843, 37.320871, -53.519729], [2.693379, 27.764569, -60.041964], [-14.73629, 37.424389, 28.997772], [-20.034363, 45.012396, 39.490405], [-20.534357, 39.36935, 52.282943], [-13.184951, 27.515983, 51.174991], [-24.126987, 40.653038, 15.868742], [-28.456861, 56.423626, 15.547835], [-38.870044, 58.881519, 27.920659], [-36.964228, 42.799978, 30.225859], [-4.884616, 46.454773, 17.328144], [-5.081369, 61.344998, 18.524271], [-5.297852, 59.385281, 33.333098], [4.785638, 48.558059, 31.263572], [-11.113477, 47.626553, 10.039341], [-11.023751, 61.364977, 10.467028], [-18.84173, 53.41793, 18.508095], [-6.899773, 47.145689, 15.865278], [4.833241, 49.612255, -0.590639], [7.983573, 58.650129, -10.508824], [15.206782, 58.179001, 1.220703], [23.795952, 49.129903, -4.637524]]

		TestUtilities.CheckPointsAllNearEqual( self, expectedGuideVertices, actualGuideVertices )

	@unittest.skipIf( MayaTest.ApiVersion < 201700, "Maya 2017 or newer is needed for this test because the test scene was saved there" )
	def test_EditGuidesV1StrandGroups( self ):
		# Load previously saved scene from V1
		testScenePath = self.findTestFile( 'OxMayaV1EditGuidesWithGroups.ma' )
		pm.openFile( testScenePath, force = True )

		guidesShape = pm.ls( type = TestUtilities.GuidesShapeName )[0]
		expectedGroups = [2, 0, 1, 1, 3, 1, 3, 1]
		actualGroups = pm.mel.OxGetStrandGroups( guidesShape )

		self.assertEqual( expectedGroups, actualGroups )
		self.assertEqual( 1, pm.mel.OxProfiler( "-warningCount" ) )

	def CheckSceneShapeVertices( self, fileName, expectedVertices, expectedStrandIds = [], shapeClassName = TestUtilities.HairShapeName, epsilon = 0.0001 ):
		testScenePath = self.findTestFile( fileName )
		pm.openFile( testScenePath, force = True )
		guidesShape = pm.ls( type = shapeClassName )[0]

		if len( expectedStrandIds ) > 0:
			expectedVerticesByStrandIds = {}
			for i in range( 0, len( expectedStrandIds ) ):
				expectedVerticesByStrandIds[expectedStrandIds[i]] = [expectedVertices[i*2], expectedVertices[i*2+1]]

			actualVerticesByStrandIds = TestUtilities.GetVerticesInObjectCoordinatesByStrandId( guidesShape )
			TestUtilities.CheckPointsAllNearEqualByStrandId( self, expectedVerticesByStrandIds, actualVerticesByStrandIds, epsilon = epsilon )
		else:
			TestUtilities.CheckPointsAllNearEqual( self, expectedVertices, TestUtilities.GetVerticesInObjectCoordinates( guidesShape ), epsilon = epsilon )

	@unittest.skipIf( MayaTest.ApiVersion < 20190000, "Maya 2019 or newer is needed for this test because the test scene was saved there" )
	@unittest.skipIf( MayaTest.OsIsMac, "Fails on the Mac, maybe needs investigation" )
	def test_LoadShapeChangesToNewlyCreatedRoots( self ):
		expectedStrandIds = [0, 1, 5, 6, 2, 7, 3, 8, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 470710057, 1380015146, 200795375, 1846047199] # (Original ids without converted created root ids)
		#expectedStrandIds = [0, 1, 5, 6, 2, 7, 3, 8, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1575017774, 1906758537, 91695942, -135453841] # New strand ids
		expectedVertices = [[9.081785, -40.450851, -27.950853], [42.567497, -77.078789, -34.043114], 
					  [-23.776413, -40.450851, -17.274578], [3.718109, -81.993721, -21.544981], 
					  [14.694637, -15.450849, -45.22543], [49.534428, -49.403027, -56.779305], 
					  [-38.471046, -15.450849, -27.950855], [-16.154444, -59.236092, -37.159351], 
					  [-23.776415, -40.450851, 17.274574], [3.718037, -81.993996, 21.545116], 
					  [-38.471046, -15.450849, 27.95085], [-16.15472, -59.236668, 37.159813], 
					  [9.081781, -40.450851, 27.950851], [42.567451, -77.078522, 34.04306], 
					  [14.694631, -15.450849, 45.225426], [49.534184, -49.402645, 56.779076], 
					  [29.389263, -40.450851, 0], [65.920494, -74.590012, -0.000022], 
					  [47.552826, -15.450849, 0], [87.676529, -45.285782, -0.000079], 
					  [14.694637, 15.450849, -45.22543], [51.244629, -13.249774, -63.67593], 
					  [-38.471046, 15.450849, -27.950855], [-25.148205, -29.336037, -45.744781], 
					  [-38.471046, 15.450849, 27.95085], [-25.148434, -29.336361, 45.745239], 
					  [14.694631, 15.450849, 45.225426], [51.244476, -13.249496, 63.675594], 
					  [47.552826, 15.450849, 0], [91.671661, -8.076827, -0.000094], 
					  [9.081785, 40.450851, -27.950853], [47.91777, 25.406918, -55.617439], 
					  [-23.776413, 40.450851, -17.274578], [-30.723824, 7.74321, -54.449528], 
					  [-23.776415, 40.450851, 17.274574], [-30.723631, 7.743404, 54.449574], 
					  [9.081781, 40.450851, 27.950851], [47.917702, 25.406834, 55.617298], 
					  [29.389263, 40.450851, 0], [78.090775, 29.128405, -0.000087], 
					  [0, -50, 0], [31.975801, -88.438934, 0], 
					  [0, 50, 0], [31.97579, 88.43895, 0.000007], 
					  [24.413425, 33.817978, 13.481525], [71.250092, 20.454601, 24.784674], 
					  [21.324409, 34.401016, -17.150158], [67.413521, 21.18671, -31.331921], 
					  [29.821259, 1.008552, 24.405409], [70.12616, -27.200493, 33.33625], 
					  [27.594229, 0.278608, -27.470661], [67.21711, -28.540976, -37.445435]]

		# Allow for a small error (0.5) because strand rotation remapping due to root transform calculation differences may not be absolute perfect
		self.CheckSceneShapeVertices( 'Ox210EditGuidesShapeEditWithNewRoots.mb', expectedVertices, expectedStrandIds, TestUtilities.GuidesShapeName, 0.5 )

	@unittest.skipIf( MayaTest.ApiVersion < 20190000, "Maya 2019 or newer is needed for this test because the test scene was saved there" )
	def test_GroundStrandsV2( self ):
		self.CheckSceneShapeVertices( 'Ox2-Maya2019-GroundStrands-Windows.mb', [[-0.375, 0, 0.375], [-0.375, 1, 0.375], 
					  [0.375, 0, 0.375], [0.375, 1, 0.375], 
					  [-0.375, 0, -0.375], [-0.375, 1, -0.375], 
					  [0.375, 0, -0.375], [0.375, 1, -0.375]] )

	@unittest.skipIf( MayaTest.ApiVersion < 20190000, "Maya 2019 or newer is needed for this test because the test scene was saved there" )
	def test_GroundedBakedHairV2( self ):
		self.CheckSceneShapeVertices( 'Ox2-Maya2019-GroundedBakedHair-Windows.mb', [[-0.75, 0, 0.75], [-0.75, 1, 0.75], [0.75, 0, 0.75], [0.75, 1, 0.75], [-0.75, 0, -0.75], [-0.75, 1, -0.75], [0.75, 0, -0.75], [0.75, 1, -0.75]] )

	@unittest.skipIf( MayaTest.ApiVersion < 20190000, "Maya 2019 or newer is needed for this test because the test scene was saved there" )
	def test_SurfaceCombV2( self ):
		self.CheckSceneShapeVertices( 'Ox2-Maya2019-SC-Windows.ma', 
							   [[-0.5, 0, 0.5], [-0.977529, -2.13933e-08, 0.60723], 
								[0.5, 0, 0.5], [0.0826165, -1.84096e-08, 0.443713],
								[-0.5, 0, -0.5], [-0.0807397, -1.85257e-08, -0.438014], 
								[0.5, 0, -0.5], [0.954233, -2.07387e-08, -0.36299]], 
							   [0, 1, 2, 3] )

	def test_LoadObsoleteLucidDynamicsGroom( self ):
		pm.polyPlane( w = 10, h = 10, sh = 1, sw = 1 )
		hairShape = pm.mel.OxLoadGroom( path = """<?xml version="1.0"?>
<Groom name="test_HairDynamics">
	<Stack>
		<PolygonMesh optional="true">
			<Vertices>-0.5 0 0.5 0.5 0 0.5 -0.5 0 -0.5 0.5 0 -0.5</Vertices>
			<VertexCounts>4</VertexCounts>
			<VertexConnects>0 1 3 2</VertexConnects>
		</PolygonMesh>
		<GuidesFromMesh distribution="Vertex" count="10" lengthRandomness="0" pointCount="2" />
		<HairDynamics strandGroup="87" randomSeed="87" collideWithSurface="true" surfaceSdfResolution="87" damping="0.234" particleRadius="0.234" subStepCount="87" iterationCount="87" stiffness="0.234" spacingOffset="0.234" maximumVelocity="123" latticeCount="87" latticeSize="0.234" groupStiffness="0.234" groupHolderGridPosition="0.234" />
	</Stack>
</Groom>
""" )
		strandCount = pm.mel.OxGetStrandCount( hairShape )
		self.assertEqual( strandCount, 4 )
		self.assertEqual( 1, pm.mel.OxProfiler( "-warningCount" ) )
